{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","start","setInterval","currentTime","Date","now","time","timeSecs","getTimeComponents","updateClockface","days","hours","mins","secs","timerId","document","querySelector","daysId","hoursId","minsId","secsId","textContent","pad","Math","floor","value","String","padStart"],"mappings":";AA+CA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA9CMA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,QA0CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAxCU,MAAA,WAAA,IAAA,EAAA,KACNC,YAAY,WACJC,IAAAA,EAAcC,KAAKC,MACnBC,EAAO,EAAKN,WAAaG,EACzBI,EAAW,EAAKC,kBAAkBF,GACxC,EAAKG,gBAAgBF,IACpB,OAkCP,CAAA,IAAA,kBA/B+C,MAAA,SAAA,GAA3BG,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC7BC,EAAUC,SAASC,cAAc,KAAKjB,UACtCkB,EAASH,EAAQE,cAAc,2BAC/BE,EAAUJ,EAAQE,cAAc,4BAChCG,EAASL,EAAQE,cAAc,2BAC/BI,EAASN,EAAQE,cAAc,2BAErCC,EAAOI,YAAiBX,GAAAA,OAAAA,GACxBQ,EAAQG,YAAiBV,GAAAA,OAAAA,GACzBQ,EAAOE,YAAiBT,GAAAA,OAAAA,GACxBQ,EAAOC,YAAiBR,GAAAA,OAAAA,KAqB5B,CAAA,IAAA,oBAlBoBP,MAAAA,SAAAA,GAQT,MAAA,CAAEI,KAPI,KAAKY,IAAIC,KAAKC,MAAMlB,EAAQ,QAO1BK,MAND,KAAKW,IACjBC,KAAKC,MAAOlB,EAAQ,MAAyB,OAKzBM,KAHT,KAAKU,IAAIC,KAAKC,MAAOlB,EAAQ,KAAoB,MAGlCO,KAFf,KAAKS,IAAIC,KAAKC,MAAOlB,EAAQ,IAAc,SAY5D,CAAA,IAAA,MALMmB,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAIrC,EA9CM7B,GA8CN,IAAIA,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAII,KAAK","file":"src.a2d05a48.js","sourceRoot":"..\\src","sourcesContent":["// створюємо клас\r\nclass CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n    this.start();\r\n  }\r\n  start() {\r\n    setInterval(() => {\r\n      const currentTime = Date.now();\r\n      const time = this.targetDate - currentTime;\r\n      const timeSecs = this.getTimeComponents(time);\r\n      this.updateClockface(timeSecs);\r\n    }, 1000);\r\n  }\r\n  // оновлюємо числа на циферблату\r\n  updateClockface({ days, hours, mins, secs }) {\r\n    const timerId = document.querySelector(this.selector);\r\n    const daysId = timerId.querySelector('span[data-value=\"days\"]');\r\n    const hoursId = timerId.querySelector('span[data-value=\"hours\"]');\r\n    const minsId = timerId.querySelector('span[data-value=\"mins\"]');\r\n    const secsId = timerId.querySelector('span[data-value=\"secs\"]');\r\n\r\n    daysId.textContent = `${days}`;\r\n    hoursId.textContent = `${hours}`;\r\n    minsId.textContent = `${mins}`;\r\n    secsId.textContent = `${secs}`;\r\n  }\r\n  // математичний розрахунок днів годин хвилин секунд\r\n  getTimeComponents(time) {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(\r\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n    );\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n\r\n    return { days, hours, mins, secs };\r\n  }\r\n\r\n  //   Приймає число, проводить до рядку і добавляє в початок 0 якщо число менше 2-х зніків\r\n\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\n\r\nnew CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});\r\n"]}